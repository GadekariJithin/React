






fetching into manageso page



import 'devextreme/dist/css/dx.common.css';
import 'devextreme/dist/css/dx.light.css';
import axios from 'axios';
//import { TableColumnResizing } from '@devexpress/dx-react-grid';
import React from 'react';
//import { customers } from './Data.js';
import DataGrid, {
  Column,
  FilterRow,
  Button,
  Editing,
  Lookup,
  HeaderFilter,
  FilterPanel,
  FilterBuilderPopup,
  Scrolling
} from 'devextreme-react/data-grid';

const columns = ['soType', 'soStatus', 'practice', 'priority','day1','day2','location','city','rims'];

class ManageSO extends React.Component {
  
  constructor(props) {
    super(props)
    this.state = {
      customers : []
    }
  }

  componentDidMount() {
    axios.get('http://localhost:8080/fetchdata')
    .then(response => { 
      console.log(response.d)
      this.setState({
      customers : response.data
    })
   })
  }
  
  render() {
    return (
      <DataGrid
        id="gridContainer"
        width={4000}
        //columnsWidth="55px"
        //columnsAutoWidth="true"
        //filterBuilder={filterBuilder}
        //defaultFilterValue={filterValue}
        
        dataSource={this.state.customers}
        defaultColumns={columns}
        showBorders={true}
      >
       {/* <FilterRow visible={true} />*/}
        <FilterPanel visible={true} />
        {/* <FilterBuilderPopup position={filterBuilderPopupPosition} /> */}
        <HeaderFilter visible={true} />
        <Scrolling mode="infinite" />
        {/* <Column dataField="soType" caption="SO Type">
          <Lookup dataSource={this.state.customers} valueExpr="Value" displayExpr="Text" />
           <StringLengthRule max={5} message="The field Customer must be a string with a maximum length of 5." /> 
        </Column> */}
       {/* <Column
          dataType="number"
          dataField="OrderNumber"
          caption="SO Type"
        >
          <HeaderFilter groupInterval={10000} />
        </Column>
        <Column dataField="OrderDate" dataType="date" />
        <Column
          editorOptions={{ format: 'currency', showClearButton: true }}
          dataField="SaleAmount"
          dataType="number"
          format="currency"
        >
          <HeaderFilter dataSource={saleAmountHeaderFilters} />
        </Column>
        
        <Column dataField="Employee" />
        <Column dataField="CustomerInfo.StoreCity" caption="City" />
       <Column dataField="CustomerInfo.StoreState" caption="State" />
       <Column dataField="action" caption="Action"  type="buttons"/>*/}
       <Editing
                    allowUpdating={true}
                    allowDeleting={true}
                    />
   
                   </DataGrid>
    )} }
    export default ManageSO;
